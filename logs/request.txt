在仔细构思需求之后，我认为程序应该具有多个功能可以选择。
1. 像之前所说，根据csv修改模版程序，按照上述修改规则修改，逐个上传到串口设备。
2. 交换串口（此时根据串口名，如com7、com18）设备内的某个文件。
3. 单项复制，将串口设备a 中的某个文件复制上传至设备b。


同时，程序应当遵守良好的工程规范。源代码和操作的模版分离。程序可以通过命令行在任意路径下使用，读取当前路径下的模版和csv文件。

具有完整的反馈和交互功能。使用合适的设计模式、数据结构和算法。

目前，我的想法中程序里应当包含以下class：
抽象类基FileManager，有关本地文件的读写。子类有Template（py代码模版）、Table（cvs表格）、Temporary（负责临时文件的创建、写入和释放）。

抽象基类Replacer，有关分析从csv文件中读取的替换的语句。子类有直接替换的直接替换DirectReplace（也就是不含$ 符号），和含有$符号的语句替换类。也许你还可以继续将其集成为可迭代对象类和执行语句类。

抽象基类Device Manager·，用于串口设备的管理。子类负责所有和串口操作相关的功能，如打开串口，读取串口信息和描述，筛选设备，获取串口是否插入新设备或拔掉设备等。请帮我构思并实现。

抽象基类Upload，有关将文件上传到串口设备。子类包括具体实现（目前我们使用mpfs）。

抽象基类功能，即程序可以选择的功能。子类是具体功能的实现。

抽象基类Interactor，负责各类交互信息。包括命令行界面、获取输入（用于选择功能和其他）、反馈信息（包含当前工作状态，需要插入新设备或可以拔掉旧设备等）、错误等子类

此外，我还需要一个记录错误信息的日志。
